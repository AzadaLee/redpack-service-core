/** 
 * @(#)ModifyRedPackStatusOpeningToOpendThread.java 1.0.0 2016年8月22日 下午8:45:47  
 *  
 * Copyright © 2016 善林金融.  All rights reserved.  
 */

package com.slfinance.redpack.core.thread;

import java.util.Date;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.slfinance.redpack.common.utils.DateUtil;
import com.slfinance.redpack.core.constants.RedPackConstant;
import com.slfinance.redpack.core.constants.enums.LogType;
import com.slfinance.redpack.core.constants.enums.RedpackStatus;
import com.slfinance.redpack.core.constants.enums.UserType;
import com.slfinance.redpack.core.entities.OperateLog;
import com.slfinance.redpack.core.entities.RedPack;
import com.slfinance.redpack.core.services.OperateLogService;
import com.slfinance.redpack.core.services.RedPackService;

/**
 * 定时扫描，最近一条红包"正开启"状态的红包并且修改此红包状态为"已开启"
 * 
 * @author SangLy
 * @version $Revision:1.0.0, $Date: 2016年8月22日 下午8:45:47 $
 */
public class ModifyRedPackStatusOpeningToOpendThread extends Thread {

	private final Log logger = LogFactory.getLog(ModifyRedPackStatusOpeningToOpendThread.class);

	private RedPackService redpackService;

	private OperateLogService operateLogService;
	
	private Date systemTime = new Date();

	private RedPack redpack = null;

	public ModifyRedPackStatusOpeningToOpendThread(RedPackService redpackService, OperateLogService operateLogService) {
		this.operateLogService = operateLogService;
		this.redpackService = redpackService;
		this.start();
	}

	@Override
	public void run() {
		while (true) {
			try {
				systemTime = new Date();
				redpack = redpackService.findCloselyDayHaveOpening(systemTime); // 距离当天时间最近“正开启”的红包，例如系统时间11点。9点场次的红包由于某种原因是“正开启”状态没有变成“已开启”，则查询出的是9点场次的红包
				if (redpack != null) {
					// 计算需要修改状态的时间点,也就是红包的“红包发放时间点”+5分钟
					Date changeHaveOpendTimePoint = DateUtil.addMinutes(redpack.getTimePoint(), RedPackConstant.START_REDPACK_TIME_MINITS.intValue());
					if (((changeHaveOpendTimePoint.getTime() - systemTime.getTime()) > 0) && ((changeHaveOpendTimePoint.getTime() - systemTime.getTime()) <= RedPackConstant.START_REDPACK_TIME_MINITS * DateUtil.MINUTE_MILISECONDS)) {
						// 红包的派送时间点在系统时间之前0~5分钟，则计算休眠时间
						sleep(changeHaveOpendTimePoint.getTime() - systemTime.getTime());
					} else {
						// 修改状态
						redpack.setStatus(RedpackStatus.已开启);
						redpackService.update(redpack);
						operateLogService.saveAsync(new OperateLog(UserType.robot, LogType.自动更改红包状态, redpack.getId(), null, new Date(), "由正开启状态更改为已开启状态"));
					}
				} else {
					// 休眠4分钟后做刷新
					sleep(RedPackConstant.REDPACK_OPENPOINT_BEFORE_NOW_FRESH * DateUtil.MINUTE_MILISECONDS);
				}
			} catch (Exception ex) {
				try {
					if (redpack != null) {
						redpackService.update(redpack);
						operateLogService.saveAsync(new OperateLog(UserType.robot, LogType.自动更改红包状态, redpack.getId(), null, new Date(), "由正开启状态更改为已开启状态"));
					}
				} catch (Exception e) {
					logger.error("redpack update error", e);
				}
			}
		}
	}

}
