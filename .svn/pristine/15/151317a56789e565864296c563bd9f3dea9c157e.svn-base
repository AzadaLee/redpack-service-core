/** 
 * @(#)PaymentController.java 1.0.0 2016年11月12日 下午4:37:52  
 *  
 * Copyright © 2016 善林金融.  All rights reserved.  
 */

package com.slfinance.redpack.core.controller;

import java.util.Map;

import org.apache.commons.beanutils.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.Feature;
import com.alipay.api.AlipayApiException;
import com.alipay.api.internal.util.AlipaySignature;
import com.google.common.collect.Maps;
import com.slfinance.redpack.core.alipay.vo.AppPayOrderResonse;
import com.slfinance.redpack.core.constants.AlipayServiceEnvConstants;
import com.slfinance.redpack.core.constants.enums.OrderType;
import com.slfinance.redpack.core.controller.base.BaseController;
import com.slfinance.redpack.core.entities.AppAlipayNotify;
import com.slfinance.redpack.core.entities.Order;
import com.slfinance.redpack.core.exception.SLException;
import com.slfinance.redpack.core.extend.validate.RuleUtils;
import com.slfinance.redpack.core.response.ResponseVo;
import com.slfinance.redpack.core.services.AlipayService;
import com.slfinance.redpack.core.services.AppAlipayNotifyService;
import com.slfinance.redpack.core.services.OrderService;

/**
 * 支付接口
 * 
 * @author samson
 * @version $Revision:1.0.0, $Date: 2016年11月12日 下午4:37:52 $
 */
@Controller
@RequestMapping("/payment")
public class PaymentController extends BaseController {

	@Autowired
	private OrderService orderService;
	@Autowired
	private AlipayService alipayService;
	@Autowired
	private AppAlipayNotifyService appAlipayNotifyService;

	/**
	 * 获取alipay支付参数
	 * 
	 * @author samson
	 * @createTime 2016年11月12日 下午4:40:06
	 * @param id
	 *            订单id
	 * @return
	 */
	@RequestMapping("getAlipayPayStr")
	@ResponseBody
	public ResponseVo getAlipayPayStr(@RequestBody Map<String, Object> params) {
		double amount = com.slfinance.redpack.common.utils.MapUtil.getDoubleValue(params, "amount");
		if (amount <= 0) {
			throw new SLException("240003");
		} else if (!RuleUtils.decimals(amount + "", 2)) {
			throw new SLException("240004");
		}
		Map<String, Object> result = Maps.newHashMap();
		Order order = new Order();
		order.setCustomerId(getLoginUserId());
		order.setOrderAmount(amount);
		order.setOrderType(OrderType.支付宝充值);
		order = orderService.save(order);
		result.put("orderStr", alipayService.getAppPayOrderString(order));
		result.put("orderId", order.getId());
		return ResponseVo.success(result);
	}

	/**
	 * 订单id
	 * 
	 * @author samson
	 * @createTime 2016年11月12日 下午4:40:06
	 * @param id
	 * @return
	 */
	@RequestMapping("alipayPaySuccess")
	public ResponseVo alipayPaySuccess(@RequestBody Map<String, Object> params) {
		String result = com.slfinance.redpack.common.utils.MapUtil.getString(params, "result");
		AppPayOrderResonse appPayOrderResonse = getAppPayOrderResponse(result);
		// TODO 业务处理
		return ResponseVo.success();
	}

	private String error = "error";
	private String success = "success";

	@RequestMapping("alipayNotify")
	@ResponseBody
	public String notify(@RequestBody Map<String, String> params) {
		try {
			if (AlipaySignature.rsaCheckV1(params, AlipayServiceEnvConstants.ALIPAY_PUBLIC_KEY, AlipayServiceEnvConstants.CHARSET)) {
				AppAlipayNotify appAlipayNotify = new AppAlipayNotify();
				try {
					BeanUtils.populate(appAlipayNotify, params);
					appAlipayNotifyService.save(appAlipayNotify);

					// TODO 业务处理

				} catch (Exception e) {
					return error;
				}
			} else {
				return error;
			}
		} catch (AlipayApiException e1) {
			logger.error("alipay rsa check failure :{}", params);
			return error;
		}
		return success;
	}

	/**
	 * 校验手机支付同步返回结果
	 * 
	 * @see https
	 *      ://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.mSZQrn
	 *      &treeId=193&articleId=105302&docType=1
	 * 
	 * @serialData String oo =
	 *             "{\"alipay_trade_app_pay_response\":{\"code\":\"10000\",\"msg\":\"Success\",\"app_id\":\"2014072300007148\",\"out_trade_no\":\"081622560194853\",\"trade_no\":\"2016081621001004400236957647\",\"total_amount\":\"0.01\",\"seller_id\":\"2088702849871851\",\"charset\":\"utf-8\",\"timestamp\":\"2016-10-1117:43:36\"},\"sign\":\"NGfStJf3i3ooWBuCDIQSumOpaGBcQz+aoAqyGh3W6EqA/gmyPYwLJ2REFijY9XPTApI9YglZyMw+ZMhd3kb0mh4RAXMrb6mekX4Zu8Nf6geOwIa9kLOnw0IMCjxi4abDIfXhxrXyj********\",\"sign_type\":\"RSA\"}"
	 *             ;
	 * @author samson
	 * @createTime 2016年11月12日 下午2:32:58
	 * @param result
	 * @return
	 */
	private AppPayOrderResonse getAppPayOrderResponse(String result) {
		if (result == null) {
			throw new SLException("111111", "支付宝同步返回结果错误");
		}
		AppPayOrderResonse oneLevel = JSON.parseObject(result, AppPayOrderResonse.class, Feature.OrderedField);
		AppPayOrderResonse twoLevel = JSON.parseObject(oneLevel.getAlipay_trade_app_pay_response(), AppPayOrderResonse.class, Feature.OrderedField);
		twoLevel.setAlipay_trade_app_pay_response(oneLevel.getAlipay_trade_app_pay_response());
		twoLevel.setSignContent(oneLevel.getAlipay_trade_app_pay_response());
		twoLevel.setSign(oneLevel.getSign());
		twoLevel.setSign_type(oneLevel.getSign_type());
		return twoLevel;
	}
}
